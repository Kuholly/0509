题目描述：
      编一个程序，读入用户输入的一串先序遍历字符串，根据此字符串建立一个二叉树（以指针方式存储）。
 例如如下的先序遍历字符串： ABC##DE#G##F### 其中“#”表示的是空格，空格字符代表空树。建立起
此二叉树以后，再对二叉树进行中序遍历，输出遍历结果。
输入描述：
      输入包括1行字符串，长度不超过100。
输出描述：
      可能有多组测试数据，对于每组数据，输出将输入字符串建立二叉树后中序遍历的序列，每个字符后面
都有一个空格。每个输出结果占一行。
示例描述：
      输入：abc##de#g##f###
      输出：c b e g d f a
代码实现：
      import java.util.*;
class TreeNode{
    char value;
    TreeNode left;
    TreeNode right;
    public TreeNode(char value) {
        this.value = value;
    }
}
public class Main{
    public static int i = 0;
    public static TreeNode createTestTree(String s){
        TreeNode root = null;
        if(s.charAt(i) != '#'){
            root = new TreeNode(s.charAt(i));
            i++;
            root.left = createTestTree(s);
            root.right = createTestTree(s);
        }else {
            i++;
        }
        return root;
    }
     public static void binaryTreeInOrder(TreeNode root){
        if(root == null) {
            return;
        }
        binaryTreeInOrder(root.left);
        System.out.print(root.value+" ");
        binaryTreeInOrder(root.right);
    }
    public static void main(String[] args) {
        Scanner sca = new Scanner(System.in);
        while(sca.hasNext()){
           String s = sca.nextLine();
           TreeNode root =  createTestTree(s);
           binaryTreeInOrder(root);
        }
    }
    
}
 